export const customSelectStyles = {
  control: (provided, state) => ({
    ...provided,
    backgroundColor: '#fff',
    borderRadius: '30px',
    border: state.hasValue ? '1px solid #f6b83d' : '1px solid transparent',
    boxShadow: 'none',
    minHeight: 42,
    padding: '11px',
    width: '100%',
    '&:hover': {
      border: state.hasValue ? '1px solid #f6b83d' : '1px solid transparent',
    },
  }),
  input: (provided) => ({
    ...provided,
    margin: 0,
    padding: 0,
    height: 18,
  }),
  valueContainer: (provided) => ({
    ...provided,
    padding: '0px',
  }),
  placeholder: (provided) => ({
    ...provided,
    color: '#262626',
    fontFamily: 'Manrope, sans-serif',
    fontWeight: 500,
    fontSize: 14,
    lineHeight: 1.28571,
    letterSpacing: '-0.03em',
    textTransform: 'capitalize',
    margin: 0,
  }),
  singleValue: (provided) => ({
    ...provided,
    color: '#262626',
    fontFamily: 'Manrope, sans-serif',
    fontWeight: 500,
    fontSize: 14,
    lineHeight: 1.28571,
    letterSpacing: '-0.03em',
    textTransform: 'capitalize',
    margin: 0,
  }),
  menu: (provided) => ({
    ...provided,
    position: 'absolute',
    top: '100%',
    left: 0,
    width: '100%',
    backgroundColor: '#fff',
    borderRadius: '30px',
    marginTop: 4,
    zIndex: 10,
    padding: 0,
    overflow: 'hidden',
    boxShadow: 'none',
    border: 'none',
  }),
  menuList: (provided) => ({
    ...provided,
    minHeight: 94,
    overflowY: 'auto',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    gap: 8,
    padding: '12px',
    boxSizing: 'border-box',

    '::-webkit-scrollbar': {
      width: '6px',
    },
    '::-webkit-scrollbar-track': {
      background: 'transparent',
    },
    '::-webkit-scrollbar-thumb': {
      background: 'rgba(38, 38, 38, 0.2)',
      borderRadius: '10px',
    },
  }),
  option: (provided, state) => ({
    ...provided,
    cursor: 'pointer',
    fontFamily: 'Manrope, sans-serif',
    fontWeight: 500,
    fontSize: 14,
    lineHeight: 1.28571,
    letterSpacing: '-0.03em',
    color: state.isSelected || state.isFocused ? '#f6b83d' : 'rgba(38, 38, 38, 0.6)',
    backgroundColor: 'transparent',
    padding: '8px 12px',
  }),
  dropdownIndicator: (provided) => ({
    ...provided,
    padding: 0,
  }),
  indicatorSeparator: () => ({
    display: 'none',
  }),
  clearIndicator: (provided) => ({
    ...provided,
    padding: 0,
  }),
};